name: Build SerenityOS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install build-essential cmake curl libmpfr-dev libmpc-dev libgmp-dev e2fsprogs ninja-build qemu-system-gui qemu-system-x86 qemu-utils ccache rsync unzip texinfo libssl-dev zlib1g-dev -y

      - name: Install GCC 13
        run: |
          sudo apt install gcc-13 g++-13 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100

      - name: Install Clang 19
        run: |
          sudo apt install libclang-19-dev clang-19 llvm-19 llvm-19-dev -y

      - name: Build SerenityOS
        run: |
          chmod +x Meta/serenity.sh
          Meta/serenity.sh image
        timeout-minutes: 180

      - name: Build GRUB image
        run: |
          cd Build/x86_64/
          ninja grub-image
        timeout-minutes: 60

      - name: Prepare artifacts
        run: |
          # Create a tar archive of the entire directory including dotfiles
          tar -czf serenity-os-build.tar.gz --exclude=.git . || true

      - name: Creating Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: SerenityOS Build ${{ github.run_number }}
          body: |
            SerenityOS build #${{ github.run_number }}
            
            Build details:
            - Build ID: ${{ github.run_id }}
            - Commit: ${{ github.sha }}
            - Trigger: ${{ github.event_name }}
            
            This is an automated build of SerenityOS.
          draft: false
          prerelease: false

      - name: Upload release assets (SerenityOS build)
        id: upload_release_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: serenity-os-build.tar.gz
          asset_name: serenity-os-build.tar.gz
          asset_content_type: application/gzip
